100+435
house<-435
people<-710767
house*people
house
setwd("C:/Users/BenG/Desktop/Data Analysis")
install.packages("stringi")
install.packages('readr')
install.packages('dplyr')
library(readr)
library(dplyr)
data<-read_csv('LI_WorkshopData_180710.csv')
str(data)
glimpse(data) ## Glimpse inverts the data so you don't run out of screen real estate trying to see all your columns
names(data)## See all of the columns and their column position numbers
?glimpse
count(data,TurnoutTargetsFlag)
tally(data,TurnoutTargetsFlag) # Simpler output
sum(data$TUrnoutTargetsFlag)
sum(data$TurnoutTargetsFlag)
count(data,Turnout_Score) # Not useful for continuous variables
summary(data$Turnout_Score) # Useful for continuous variables
count(data,Turnout_Score>=.5) # Useful for conditions on continuous variables
sum(data$onlineact) # What's the problem?
count(data,onlineact)
data$onlineact[is.na(data$onlineact)]<-0 # Replace NAs w zeroes.
sum(data$onlineact)
count(data,Turnout_Score>=.5 & TrumpApproveFlag==1)
count(data,Turnout_Score>=.5 | TrumpApproveFlag==1)
count(data,!Turnout_Score>=.25)
count(data,Turnout_Score<.25) # same
count(data,TrumpApproveFlag=1)
count(data,TrumpApproveFlag==1) # not same
count(data,Turnout_Score>=.25 & TrumpApproveFlag==1) ## Which TRUE count will be higher?
count(data,Turnout_Score>=.25 | TrumpApproveFlag==1)
count(data,Turnout_Score>=.25 | TrumpApproveFlag==1)
joindata<-read_csv('LI_Workshop_JoinData_180710.csv')
glimpse(joindata)
flagsanddata<-data %>%
left_join(joindata,'uniqueid') ## don't forget the quotes around the join key. '' is equivalent to "".
count(flagsanddata, registeredparty %in% c('R','O'))
select(-PrecinctName)
glimpse(flagsanddata1)
flagsanddata1<-flagsanddata %>% # Almost always create a new data frame during analysis. Don't overwrite.  VERSION CONTROL IS VERY IMPORTANT!
select(-PrecinctName)
glimpse(flagsanddata1)
vendorlist<-flagsanddata1 %>%
mutate(LikelyTurnoutFlag=ifelse(Turnout_Score>=.2,1,0), # multiple columns can be created with 1 mutate if comma separated
CallTargets=ifelse(LikelyConsiderFlag==1 &
LikelyTurnoutFlag==1 &
landline_reliabilitycode>6,1,0)) %>% # stacking conditions prevents mistakes as it's easier to read
select(uniqueid,LikelyConsiderFlag,LikelyTurnoutFlag,CallTargets,sex,agerange,PrecinctNumber,vf_firstname,Phone=landline)
count(vendorlist,LikelyTurnoutFlag)
count(vendorlist,CallTargets)
glimpse(flagsanddata1)
glimpse(vendorlist)
count(vendorlist,LikelyTurnoutFlag)
count(vendorlist,CallTargets)
glimpse(flagsanddata1)
ldlist<-flagsanddata1 %>%
filter(LegislativeDistrict %in% c(55,83,85)) %>%
filter(!(is.na(vh16p) & is.na(vh16pp))) %>% # can list conditions like with mutate but sometimes don't for clarity
select(uniqueid,TrumpApproveFlag,registeredparty,vh16p,vh16pp,LegislativeDistrict,sex,agerange,PrecinctNumber,vf_firstname,Phone=cellphone)
count(flagsanddata1,LegislativeDistrict)
count(ldlist,LegislativeDistrict)
flagsanddata1 %>% count(is.na(vh16p) & is.na(vh16pp))
ldlist %>% count(is.na(vh16p) & is.na(vh16pp))
glimpse(flagsanddata1)
flagsanddata1 %>%
group_by(agerange) %>%
summarize_at(vars(LeanConsiderFlag),
funs(sum(.,na.rm=T)))
glimpse(flagsanddata1)
flagsanddata1 %>%
group_by(agerange) %>%
summarize_at(vars(LeanConsiderFlag),
funs(sum(.,na.rm=T)))
install.packages('ggplot2')
ggplot(flagsanddata1) +
geom_density(na.rm=TRUE,aes(Turnout_Score),fill='red',alpha=0.7,color='black')+
theme(plot.title = element_text(hjust = 0.5))+
xlim(0,1)+ ylim(0,2)+ xlab('Probability')+ ylab('Density')+ ggtitle('Turnout Scores')
library(ggplot2)
ggplot(flagsanddata1) +
geom_density(na.rm=TRUE,aes(Turnout_Score),fill='red',alpha=0.7,color='black')+
theme(plot.title = element_text(hjust = 0.5))+
xlim(0,1)+ ylim(0,2)+ xlab('Probability')+ ylab('Density')+ ggtitle('Turnout Scores')
targetsexport <- data %>%
filter(TurnoutTargetsFlag==1)
write_csv(targetsexport,'LI_TurnoutTargetsExport_180711.csv')
library("dbplyr", lib.loc="~/R/win-library/3.4")
detach("package:dbplyr", unload=TRUE)
attach("package:dply", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
